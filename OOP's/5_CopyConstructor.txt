/////Copy Constructor/////
A copy constructor is a member function that initializes an object using another 
object of the same class. The Copy constructor is called mainly when a new object is 
created from an existing object, as a copy of the existing object. 

Copy Constructor may be called for the following cases: 

1) When an object of the class is returned by value. 
2) When an object of the class is passed (to a function) by value as an argument. 
3) When an object is constructed based on another object of the same class. 
4) When the compiler generates a temporary object. 

Depending upon the resources like dynamic memory held by the object, 
either we need to perform Shallow Copy or Deep Copy in order to create a 
replica of the object. In general, if the variables of an object have been 
dynamically allocated, then it is required to do a Deep Copy in order to 
create a copy of the object.

Shallow Copy:
In shallow copy, an object is created by simply copying the data of all variables 
of the original object. This works well if none of the variables of the object are 
defined in the heap section of memory. If some variables are dynamically allocated 
memory from heap section, then the copied object variable will also reference the 
same memory location.
This will create ambiguity and run-time errors, dangling pointer. Since both objects will 
reference to the same memory location, then change made by one will reflect those change 
in another object as well. Since we wanted to create a replica of the object, this purpose 
will not be filled by Shallow copy
Note: C++ compiler implicitly creates a copy constructor and overloads assignment operator 
in order to perform shallow copy at compile time.


Deep Copy:
In Deep copy, an object is created by copying data of all variables, and it also allocates similar 
memory resources with the same value to the object. In order to perform Deep copy, we need to explicitly 
define the copy constructor and assign dynamic memory as well, if required. Also, it is required to 
dynamically allocate memory to the variables in the other constructors, as well.

Refer the below link for difference between shallow copy and deep copy
https://www.geeksforgeeks.org/shallow-copy-and-deep-copy-in-c/?ref=lbp