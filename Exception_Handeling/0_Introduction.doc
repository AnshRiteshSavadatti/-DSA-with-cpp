/////Exception Handling in C++/////

In C++, exceptions are runtime anomalies or abnormal conditions that a program encounters 
during its execution. The process of handling these exceptions is called exception handling. 
Using the exception handling mechanism, the control from one part of the program where the 
exception occurred can be transferred to another part of the code.

So basically using exception handling in C++, we can handle the exceptions so that our 
program keeps running.

What is a C++ Exception?
An exception is an unexpected problem that arises during the execution of a program our 
program terminates suddenly with some errors/issues. Exception occurs during the running of 
the program (runtime).

Types of C++ Exception
There are two types of exceptions in C++

Synchronous: 
    Exceptions that happen when something goes wrong because of a mistake in the input data or 
    when the program is not equipped to handle the current type of data it’s working with, such 
    as dividing a number by zero.

Asynchronous: 
    Exceptions that are beyond the program’s control, such as disc failure, keyboard interrupts, 
    etc.

C++ try and catch

C++ provides an inbuilt feature for Exception Handling. It can be done using the following 
specialized keywords: try, catch, and throw with each having a different purpose.

Syntax of try-catch in C++
try {         
     // Code that might throw an exception
     throw SomeExceptionType("Error message");
 } 
catch( ExceptionName e1 )  {   
     // catch block catches the exception that is thrown from try block
 } 

 1. try in C++
    The try keyword represents a block of code that may throw an exception placed inside the 
    try block. It’s followed by one or more catch blocks. If an exception occurs, try block 
    throws that exception.

2. catch in C++
    The catch statement represents a block of code that is executed when a particular exception 
    is thrown from the try block. The code to handle the exception is written inside the catch 
    block.

3. throw in C++
    An exception in C++ can be thrown using the throw keyword. When a program encounters a throw 
    statement, then it immediately terminates the current function and starts finding a matching 
    catch block to handle the thrown exception.

Types of errors (the impact)

    Syntax error: 
        The compilation fails, the compiler gives the feed back of the syntax error
    Logical error: 
        Undesired out put
    Run time error: 
        The program exits/terminates abruptly from the statement which caused run time error


logic-error
    -invalid_argument
    -length_error
    -out_of_range

runtime_error (arithmetic overflow errors)
    -overflow_error 
    -underflow_error

